@font-face {
    font-family: "Montserrat";
    src: url("./assets/fonts/Montserrat-Redular.woff2") format("woff2");
    font-weight: 400;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: "Montserrat";
    src: url("./assets/fonts/Montserrat-Medium.woff2") format("woff2");
    font-weight: 500;
    font-style: normal;
    font-display: swap;
}


@font-face {
    font-family: "Montserrat";
    src: url("./assets/fonts/Montserrat-Bold.woff2") format("woff2");
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}

/**
  Нормализация блочной модели
 */
*,
::before,
::after {
    box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
    padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
    margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl
):where([class]) {
    margin-block: 0;
}

:where(dd[class]) {
    margin-left: 0;
}

:where(fieldset[class]) {
    margin-left: 0;
    padding: 0;
    border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
    list-style: none;
}

:where(address[class]) {
    font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
    --paragraphMarginBottom: 24px;

    margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
    margin-bottom: var(--paragraphMarginBottom);
}


/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
    display: block;
    max-width: 100%;
    height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
    font: inherit;
}

html {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    height: 100%;
    /**
      Убираем скачок интерфейса по горизонтали
      при появлении / исчезновении скроллбара
     */
    scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
    scroll-behavior: smooth;
}

body {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    min-height: 100%;
    /**
      Унифицированный интерлиньяж
     */
    line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
    display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
    cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not(
  [fill="none"],
  [fill^="url"]
)) {
    fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not(
  [stroke="none"],
  [stroke^="url"]
)) {
    stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
    transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
    border-collapse: collapse;
    border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

:root {
    --color-dark: #000000;
    --color-light: #FFFFFF;
    --color-dark-gray: #1A1A1A;
    --color-accent: #0A51CB;
    --color-cobalt-blue: #0740A1;

    --border-radius: 36px;
    --border: 2px solid var(--color-light);

    --font-family-base: "Montserrat", sans-serif;

    --button-height: 60px;
    --link-min-heigt: 90px;

    --container-width: 1480px;
    --container-padding-x: 15px;

    --transition-duration: 0.2s;
}

body {
    font-family: var(--font-family-base);
    background-color: var(--color-light);
    font-size: 18px;
    line-height: 1.5;
    letter-spacing: 0.07em;
}

a,
button,
input,
textarea,
svg * {
    transition-duration: var(--transition-duration);
}

a {
    color: var(--color-light);
    text-decoration: none;
}


.container {
    max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
    margin-inline: auto;
    padding-inline: var(--container-padding-x);
}

h1, h2, h3, h4, h5, h6 {
    font-weight: 700;
}

.button {
    display: inline-flex;
    height: var(--button-height);
    align-items: center;
    padding-inline: 35px;
    background-color: transparent;
    color: var(--color-light);
    border-radius: var(--border-radius);
    border: var(--border);
}

.button:hover {
    background-color: var(--color-light);
    color: var(--color-dark);
}

h1 {
    font-size: clamp(26px, 2.71vw, 52px);
}

h2 {
    font-size: 42px;
}

h3 {
    font-size: 36px;
}

.header {
    display: flex;
    min-height: 100vh;
}

.header__aside {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    row-gap: 10px;
    padding-block: 15px;
    min-height: var(--link-min-heigt);
    background-color: var(--color-accent);
    color: var(--color-light);
    width: 24%;
}

.header__aside:hover {
    background-color: var(--color-cobalt-blue);
}

.aside__text {
    font-size: clamp(18px, 1.88vw, 38px);
}

.header-actions {
    display: flex;
}

.header-button {
    display: flex;
    align-items: center;
    padding-inline: 78px;
    padding-block: 15px;
    min-height: var(--link-min-heigt);
    white-space: nowrap;
    background-color: var(--color-accent);
}

.header-button:hover {
    background-color: var(--color-cobalt-blue);
}

.header-menu {
    display: flex;
    align-items: center;
    justify-content: center;
    padding-inline: 30px;
    width: 100%;
    background-color: var(--color-dark);
    min-height: 117px;
}

.header-menu-list {
    display: flex;
    flex-wrap: wrap;
    column-gap: 53px;
}

.header-menu-link {
    display: inline-flex;
    align-items: center;
    min-height: 117px;
}


.header-menu-link:hover {
    color: var(--color-accent)
}

.hero {
    background-image: url('../assets/images/header/background.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    min-height: calc(100vh - var(--link-min-heigt));
    width: 100%;
}

.hero__body {
    padding-left: 111px;
    padding-top: 123px;
    margin-right: 30px;
    max-width: 878px;
    color: var(--color-light)
}

.hero__title {
    margin-bottom: 52px;
}

.hero__description {
    font-size: 22px;
    margin-bottom: 67px;
}

@media (max-width: 1480px) {
    .header-menu,
    .header-menu-link {
        min-height: 80px;
    }

    .header-button {
        padding-inline: 50px;
    }
}

@media (max-width: 1024px) {
    .header {
        flex-direction: column-reverse;
    }

    .header__aside {
        display: flex;
        flex-direction: row;
        column-gap: 30px;
        width: 100%;
    }
}

@media (max-width: 768px) {
    .header-actions {
        flex-direction: column;
    }

    .header-menu,
    .header-menu-link {
        min-height: 50px;
    }

    .hero__body {
        padding-left: 30px;
        padding-top: 30px;
    }

    .hero__title {
        margin-bottom: 22px;
    }

    .hero__description {
        margin-bottom: 27px;
        font-size: 18px;
    }
}
